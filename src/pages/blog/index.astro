---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Footer from '../../components/Footer.astro';
import { getCollection } from 'astro:content';

const writeups = await getCollection('writeups');
const sortedWriteups = writeups
  .filter(w => !w.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

// Get featured or most recent writeups (max 3 for now)
const featuredWriteups = sortedWriteups.slice(0, 3);
---

<BaseLayout title="Blog | Cybersecurity Portfolio">
  <div class="content-container">
    <section class="page-header">
      <h1 class="page-title"><span class="dollar-sign">$</span>./blog</h1>
      <p class="page-description">Technical write-ups about cybersecurity topics, CTF solutions, and vulnerability research</p>
    </section>
    
    <div class="categories-section">
      <h2>Categories</h2>
      <div class="category-list">
        <a href="/blog/web-exploits" class="category-item">Web Exploits</a>
        <a href="/blog/binary-analysis" class="category-item">Binary Analysis</a>
        <a href="/blog/ctf-solutions" class="category-item">CTF Solutions</a>
      </div>
    </div>
    
    <div class="search-container">
      <form class="search-form" action="/search" method="GET">
        <input 
          type="text" 
          name="q" 
          class="search-input" 
          placeholder="Search blog for techniques, tools, CVEs..."
          aria-label="Search blog"
        />
        <button type="submit" class="search-button">Search</button>
      </form>
    </div>
    
    <!-- Featured Section -->
    <section class="featured-section">
      <h2 class="section-title">Featured Posts</h2>
      
      <div class="featured-grid">
        {featuredWriteups.map((post) => {
          const date = post.data.date;
          const formattedDate = `${date.getFullYear()} · ${String(date.getMonth() + 1).padStart(2, '0')}`;
          
          return (
            <a href={`/blog/${post.slug}`} class="featured-item">
              <div class="featured-header">
                <h3 class="featured-name">{post.data.title}</h3>
                <span class="featured-date">{formattedDate}</span>
              </div>
              <p class="featured-desc">
                A detailed walkthrough of solving a web security challenge from a recent CTF
                competition.
              </p>
              <div class="featured-tags">
                <span class="featured-tag">web</span>
                <span class="featured-tag">ctf</span>
                <span class="featured-tag">xss</span>
              </div>
            </a>
          );
        })}
      </div>
    </section>
    
    <section class="all-writeups-section">
      <h2 class="section-title">All Posts</h2>
      
      <ul class="blog-list">
        {sortedWriteups.map((post) => {
          const date = post.data.date;
          const formattedDate = `${date.getFullYear()} · ${String(date.getMonth() + 1).padStart(2, '0')}`;
          
          return (
            <li class="blog-item">
              <span class="blog-date">{formattedDate}</span>
              <a href={`/blog/${post.slug}`} class="blog-link">{post.data.title}</a>
            </li>
          );
        })}
      </ul>
    </section>
  </div>
  
  <Footer slot="footer" />
</BaseLayout>

<style>
  .content-container {
    width: 100%;
    max-width: 800px;
    margin: 0 auto;
    padding-top: 5rem;
  }
  
  .page-header {
    margin: 3rem 0 4rem;
    text-align: center;
  }
  
  .page-title {
    font-size: 2rem;
    margin-bottom: 1rem;
    letter-spacing: -0.02em;
  }
  
  .dollar-sign {
    color: #7d7d7d;
    margin-right: 0.2rem;
  }
  
  .page-description {
    color: var(--text-secondary);
    max-width: 600px;
    margin: 0 auto;
  }
  
  .categories-section {
    margin: 3rem 0;
    text-align: center;
  }
  
  .category-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
    margin-top: 1.5rem;
  }
  
  .category-item {
    color: var(--text-secondary);
    text-decoration: none;
    border: 1px solid var(--border);
    padding: 0.5rem 1.2rem;
    transition: all 0.2s ease;
    font-size: 0.9rem;
  }
  
  .category-item:hover {
    border-color: var(--text-secondary);
    color: var(--text-main);
    background-color: rgba(255, 255, 255, 0.03);
  }
  
  .search-container {
    width: 100%;
    margin: 3rem auto;
  }
  
  .search-form {
    display: flex;
    align-items: center;
    width: 100%;
  }
  
  .search-input {
    width: 100%;
    background: transparent;
    border: 1px solid var(--border);
    color: var(--text-main);
    font-family: var(--font-mono);
    font-size: var(--font-size);
    padding: 0.7rem 1rem;
    border-radius: 0;
    transition: all 0.2s ease;
  }
  
  .search-input:focus {
    outline: none;
    border-color: var(--text-secondary);
  }
  
  .search-input::placeholder {
    color: var(--text-secondary);
    opacity: 0.7;
  }
  
  .search-button {
    background: transparent;
    border: 1px solid var(--border);
    border-left: none;
    color: var(--text-secondary);
    font-family: var(--font-mono);
    font-size: var(--font-size-small);
    padding: 0.7rem 1.2rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .search-button:hover {
    color: var(--text-main);
    background-color: rgba(255, 255, 255, 0.03);
  }
  
  .section-title {
    font-size: 1.3rem;
    margin-bottom: 2rem;
    text-align: center;
  }
  
  .featured-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;
    margin-bottom: 2rem;
  }
  
  @media (min-width: 768px) {
    .featured-grid {
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    }
  }
  
  .featured-item {
    display: block;
    text-decoration: none;
    border: 1px solid var(--border);
    padding: 1.5rem;
    transition: all 0.2s ease;
    text-align: left;
    height: 100%;
  }
  
  .featured-item:hover {
    border-color: var(--text-secondary);
    transform: translateY(-2px);
    box-shadow: var(--subtle-shadow);
  }
  
  .featured-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;
    flex-wrap: wrap;
  }
  
  .featured-date {
    color: var(--text-secondary);
    font-size: var(--font-size-small);
    text-align: right;
    white-space: nowrap;
    margin-left: auto;
  }
  
  .featured-name {
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
    color: var(--text-main);
    font-weight: 400;
    margin-right: 1rem;
  }
  
  .featured-desc {
    color: var(--text-secondary);
    font-size: var(--font-size-small);
    margin-bottom: 1rem;
  }
  
  .featured-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: auto;
  }
  
  .featured-tag {
    font-size: 0.7rem;
    color: var(--text-secondary);
    border: 1px solid var(--border);
    padding: 0.2rem 0.5rem;
    transition: all 0.15s ease;
  }
  
  .featured-item:hover .featured-tag {
    border-color: var(--border-hover);
  }
  
  .all-writeups-section {
    margin: 4rem 0;
  }
  
  .blog-list {
    width: 100%;
    list-style: none;
    text-align: left;
    margin: 2rem 0;
  }
  
  .blog-item {
    display: flex;
    margin-bottom: 0.7rem;
    align-items: baseline;
    padding: 0.4rem 0;
    transition: transform 0.2s ease;
  }
  
  .blog-item:hover {
    transform: translateX(3px);
  }
  
  .blog-date {
    min-width: 110px;
    color: var(--text-secondary);
    font-size: var(--font-size-small);
    margin-right: 2rem;
  }
  
  .blog-link {
    color: var(--text-main);
    text-decoration: none;
    transition: all 0.2s ease;
    position: relative;
  }
  
  .blog-link:hover {
    color: var(--text-main);
  }
  
  .blog-link:hover::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: var(--text-secondary);
    opacity: 0.5;
  }
  
  @media (max-width: 768px) {
    .blog-item {
      flex-direction: column;
      margin-bottom: 1.2rem;
    }
    
    .blog-date {
      margin-bottom: 0.3rem;
      margin-right: 0;
    }
    
    .featured-header {
      flex-direction: column;
      align-items: flex-start;
    }
    
    .featured-date {
      margin-left: 0;
      margin-top: 0.5rem;
    }
  }
</style>

<script>
  // Search functionality will be implemented here
  // This is a placeholder for the actual search implementation
  const searchInput = document.getElementById('search-input');
  const searchResults = document.getElementById('search-results');
  
  if (searchInput && searchResults) {
    searchInput.addEventListener('input', (e) => {
      const query = e.target.value.toLowerCase();
      // Search implementation will go here
      // This will use a search index built at build time
    });
  }
</script> 