[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.7.10","content-config-digest","90e524f41e687593","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://your-portfolio-url.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{\"bash\":\"shellscript\",\"sh\":\"shellscript\",\"shell\":\"shellscript\",\"zsh\":\"shellscript\",\"js\":\"javascript\"},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","writeups",["Map",11,12,69,70],"example-writeup",{"id":11,"data":13,"body":23,"filePath":24,"digest":25,"rendered":26},{"title":14,"date":15,"draft":16,"tags":17,"description":22},"Example CTF Write-up: Web Challenge",["Date","2024-03-15T00:00:00.000Z"],false,[18,19,20,21],"web","ctf","xss","sql-injection","A detailed walkthrough of solving a web security challenge from a recent CTF competition.","# Example CTF Write-up: Web Challenge\n\n## Challenge Overview\nThis write-up details the solution to a web security challenge from a recent CTF competition. The challenge involved identifying and exploiting multiple vulnerabilities in a web application.\n\n## Initial Reconnaissance\nFirst, I performed a basic reconnaissance of the web application:\n\n```bash\ncurl -I https://challenge.example.com\n```\n\nThe response headers revealed some interesting information about the server configuration.\n\n## Vulnerability Discovery\nThe application had several security issues:\n\n1. SQL Injection in the login form\n2. XSS vulnerability in the user profile page\n3. Insecure direct object references\n\n## Exploitation\n### SQL Injection\nThe login form was vulnerable to SQL injection. Here's the payload I used:\n\n```sql\nadmin' OR '1'='1' --\n```\n\n### XSS Exploit\nThe user profile page didn't properly sanitize user input:\n\n```javascript\n\u003Cscript>alert(document.cookie)\u003C/script>\n```\n\n## Solution\nAfter identifying the vulnerabilities, I was able to:\n\n1. Bypass authentication using SQL injection\n2. Steal session cookies via XSS\n3. Access the admin panel using the stolen credentials\n\n## Lessons Learned\nThis challenge reinforced several important security concepts:\n\n- Always validate and sanitize user input\n- Use parameterized queries for database operations\n- Implement proper access controls\n- Regularly update and patch web applications\n\n## Conclusion\nThis write-up demonstrates the importance of thorough security testing and the potential impact of common web vulnerabilities.","src/content/writeups/example-writeup.md","a9f63f000fe2fda6",{"html":27,"metadata":28},"\u003Ch1 id=\"example-ctf-write-up-web-challenge\">Example CTF Write-up: Web Challenge\u003C/h1>\n\u003Ch2 id=\"challenge-overview\">Challenge Overview\u003C/h2>\n\u003Cp>This write-up details the solution to a web security challenge from a recent CTF competition. The challenge involved identifying and exploiting multiple vulnerabilities in a web application.\u003C/p>\n\u003Ch2 id=\"initial-reconnaissance\">Initial Reconnaissance\u003C/h2>\n\u003Cp>First, I performed a basic reconnaissance of the web application:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">curl\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -I\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> https://challenge.example.com\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The response headers revealed some interesting information about the server configuration.\u003C/p>\n\u003Ch2 id=\"vulnerability-discovery\">Vulnerability Discovery\u003C/h2>\n\u003Cp>The application had several security issues:\u003C/p>\n\u003Col>\n\u003Cli>SQL Injection in the login form\u003C/li>\n\u003Cli>XSS vulnerability in the user profile page\u003C/li>\n\u003Cli>Insecure direct object references\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"exploitation\">Exploitation\u003C/h2>\n\u003Ch3 id=\"sql-injection\">SQL Injection\u003C/h3>\n\u003Cp>The login form was vulnerable to SQL injection. Here’s the payload I used:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"sql\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">admin\u003C/span>\u003Cspan style=\"color:#9ECBFF\">' OR '\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'='\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#9ECBFF\">' --\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"xss-exploit\">XSS Exploit\u003C/h3>\n\u003Cp>The user profile page didn’t properly sanitize user input:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>alert(document.cookie)&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"solution\">Solution\u003C/h2>\n\u003Cp>After identifying the vulnerabilities, I was able to:\u003C/p>\n\u003Col>\n\u003Cli>Bypass authentication using SQL injection\u003C/li>\n\u003Cli>Steal session cookies via XSS\u003C/li>\n\u003Cli>Access the admin panel using the stolen credentials\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"lessons-learned\">Lessons Learned\u003C/h2>\n\u003Cp>This challenge reinforced several important security concepts:\u003C/p>\n\u003Cul>\n\u003Cli>Always validate and sanitize user input\u003C/li>\n\u003Cli>Use parameterized queries for database operations\u003C/li>\n\u003Cli>Implement proper access controls\u003C/li>\n\u003Cli>Regularly update and patch web applications\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>This write-up demonstrates the importance of thorough security testing and the potential impact of common web vulnerabilities.\u003C/p>",{"headings":29,"localImagePaths":61,"remoteImagePaths":62,"frontmatter":63,"imagePaths":68},[30,33,37,40,43,46,49,52,55,58],{"depth":31,"slug":32,"text":14},1,"example-ctf-write-up-web-challenge",{"depth":34,"slug":35,"text":36},2,"challenge-overview","Challenge Overview",{"depth":34,"slug":38,"text":39},"initial-reconnaissance","Initial Reconnaissance",{"depth":34,"slug":41,"text":42},"vulnerability-discovery","Vulnerability Discovery",{"depth":34,"slug":44,"text":45},"exploitation","Exploitation",{"depth":47,"slug":21,"text":48},3,"SQL Injection",{"depth":47,"slug":50,"text":51},"xss-exploit","XSS Exploit",{"depth":34,"slug":53,"text":54},"solution","Solution",{"depth":34,"slug":56,"text":57},"lessons-learned","Lessons Learned",{"depth":34,"slug":59,"text":60},"conclusion","Conclusion",[],[],{"title":14,"date":64,"description":22,"tags":65,"categories":66},["Date","2024-03-15T00:00:00.000Z"],[18,19,20,21],[19,67],"web-security",[],"example-ctf-web-challenge",{"id":69,"data":71,"body":74,"filePath":75,"digest":76,"rendered":77},{"title":72,"date":73,"draft":16},"Example CTF Write-up - Web Challenge",["Date","2024-03-15T00:00:00.000Z"],"# Example CTF Write-up: Web Challenge\n\nA detailed walkthrough of solving a web security challenge from a recent CTF competition.\n\n## Challenge Overview\n\nThis challenge involved a web application with several vulnerabilities that could be exploited to gain access to a protected area.\n\n## Exploitation Steps\n\n1. Initial reconnaissance revealed a potential SQL injection vulnerability\n2. Using a combination of XSS and SQL injection techniques, we were able to bypass authentication\n3. The final flag was obtained by accessing admin functionality\n\n## Key Techniques Used\n\n- SQL Injection\n- Cross-Site Scripting (XSS)\n- Authentication Bypass\n- Session Hijacking\n\n## Tools\n\n- Burp Suite\n- SQLmap\n- Custom Python scripts\n\n## Conclusion\n\nThis challenge demonstrated how combining multiple vulnerabilities can lead to a complete compromise of a web application.","src/content/writeups/example-ctf-web-challenge.md","eb905f5b6b2c54af",{"html":78,"metadata":79},"\u003Ch1 id=\"example-ctf-write-up-web-challenge\">Example CTF Write-up: Web Challenge\u003C/h1>\n\u003Cp>A detailed walkthrough of solving a web security challenge from a recent CTF competition.\u003C/p>\n\u003Ch2 id=\"challenge-overview\">Challenge Overview\u003C/h2>\n\u003Cp>This challenge involved a web application with several vulnerabilities that could be exploited to gain access to a protected area.\u003C/p>\n\u003Ch2 id=\"exploitation-steps\">Exploitation Steps\u003C/h2>\n\u003Col>\n\u003Cli>Initial reconnaissance revealed a potential SQL injection vulnerability\u003C/li>\n\u003Cli>Using a combination of XSS and SQL injection techniques, we were able to bypass authentication\u003C/li>\n\u003Cli>The final flag was obtained by accessing admin functionality\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"key-techniques-used\">Key Techniques Used\u003C/h2>\n\u003Cul>\n\u003Cli>SQL Injection\u003C/li>\n\u003Cli>Cross-Site Scripting (XSS)\u003C/li>\n\u003Cli>Authentication Bypass\u003C/li>\n\u003Cli>Session Hijacking\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"tools\">Tools\u003C/h2>\n\u003Cul>\n\u003Cli>Burp Suite\u003C/li>\n\u003Cli>SQLmap\u003C/li>\n\u003Cli>Custom Python scripts\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>This challenge demonstrated how combining multiple vulnerabilities can lead to a complete compromise of a web application.\u003C/p>",{"headings":80,"localImagePaths":93,"remoteImagePaths":94,"frontmatter":95,"imagePaths":97},[81,82,83,86,89,92],{"depth":31,"slug":32,"text":14},{"depth":34,"slug":35,"text":36},{"depth":34,"slug":84,"text":85},"exploitation-steps","Exploitation Steps",{"depth":34,"slug":87,"text":88},"key-techniques-used","Key Techniques Used",{"depth":34,"slug":90,"text":91},"tools","Tools",{"depth":34,"slug":59,"text":60},[],[],{"title":72,"date":96,"draft":16},["Date","2024-03-15T00:00:00.000Z"],[]]